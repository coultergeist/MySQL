/*
TITLE:			A2-STATEMENTS.SQL
SECTION:		AD350 – DATABASE
NAME:			COULTER, DANIELLE
DUE DATE:		JAN 19, 2019

PURPOSE: EXECUTE ADHOC QUERIES TO TEST THE SAKILA DATABASE.

*/

-- 1: 	HOW MANY DISTINCT COUNTRIES ARE THERE?
SELECT COUNT(DISTINCT COUNTRY) AS 'COUNTRY COUNT' 
FROM COUNTRY;

-- 2.	FIND OUT THE TOP 5 COUNTRIES WITH MOST NUMBER OF CLIENTS.
SELECT COUNTRY,COUNT(DISTINCT NAME) AS NUMBER 
FROM CUSTOMER_LIST 
GROUP BY COUNTRY 
ORDER BY NUMBER 
DESC LIMIT 5;

-- 3.	WHAT ARE THE NAMES OF ALL THE LANGUAGES IN THE DATABASE (SORTED ALPHABETICALLY)?
SELECT NAME 
FROM LANGUAGE 
ORDER BY NAME;

-- 4.	RETURN THE FULL NAMES (FIRST AND LAST) OF ACTORS WITH “SON” IN THEIR LAST NAME, ORDERED BY THEIR FIRST NAME.
SELECT FIRST_NAME, LAST_NAME 
FROM ACTOR 
WHERE LAST_NAME LIKE '%SON%' 
ORDER BY FIRST_NAME;

-- 5.	CREATE A LIST OF FILMS AND THEIR CORRESPONDING CATEGORIES.
SELECT T1.TITLE,T3.NAME AS CATEGORY 
FROM FILM AS T1 
INNER JOIN FILM_CATEGORY AS T2 
ON T1.FILM_ID = T2.FILM_ID

INNER JOIN CATEGORY AS T3 
ON T2.CATEGORY_ID = T3.CATEGORY_ID;

-- 6.	CREATE A LIST OF CATEGORIES AND THE NUMBER OF FILMS FOR EACH CATEGORY.
SELECT T3.NAME,COUNT(T1.TITLE) AS 'NUMBER OF FILMS' 
FROM FILM AS T1 
INNER JOIN FILM_CATEGORY AS T2 
ON T1.FILM_ID = T2.FILM_ID

INNER JOIN CATEGORY AS T3 
ON T2.CATEGORY_ID = T3.CATEGORY_ID 
GROUP BY T3.NAME;

-- 7.	CREATE A LIST OF ACTORS AND THE NUMBER OF MOVIES BY EACH ACTOR.
SELECT T1.FIRST_NAME,T1.LAST_NAME,COUNT(T2.FILM_ID) AS 'NUMBER OF FILMS' 
FROM ACTOR AS T1

INNER JOIN FILM_ACTOR AS T2 
ON T1.ACTOR_ID = T2.ACTOR_ID 
GROUP BY T2.ACTOR_ID;

-- 8.	FIND THE NUMBER OF ENGLISH FILMS IN THE CATEGORY OF ‘DOCUMENTARY’
SELECT COUNT(T1.FILM_ID) 
FROM FILM AS T1 

INNER JOIN FILM_CATEGORY 
AS T2 ON T1.FILM_ID = T2.FILM_ID
WHERE T1.LANGUAGE_ID 
IN (SELECT LANGUAGE_ID FROM LANGUAGE WHERE NAME = 'ENGLISH')
AND T2.`CATEGORY_ID` 
IN (SELECT CATEGORY_ID FROM CATEGORY WHERE NAME = 'DOCUMENTARY')

-- 9.	HOW MANY ACTORS HAVE NOT ACTED IN ANY FILMS?
SELECT COUNT(*) AS NOT_ACTED_COUNT 
FROM ACTOR 
WHERE ACTOR_ID 
NOT IN ( SELECT DISTINCT ACTOR_ID FROM FILM_ACTOR);

-- 10.	HOW MANY FILMS ARE OUT ON RENT?
SELECT COUNT(*) AS ON_RENT 
FROM FILM 
WHERE FILM_ID 
IN (SELECT DISTINCT FILM_ID FROM INVENTORY 
	WHERE INVENTORY_ID IN 
		(SELECT DISTINCT INVENTORY_ID FROM RENTAL
		)
	);

-- 11 WHAT IS THE MOST COMMON HOUR WHEN PEOPLE PAY FOR A DVD RENTAL?
SELECT HOUR(PAYMENT_DATE) MOST_COMMON_HOUR FROM PAYMENT
GROUP BY HOUR(PAYMENT_DATE) ORDER BY COUNT(*) DESC LIMIT 1;

-- 12 WHICH ACTORS HAVE THE FIRST NAME ‘SCARLETT’?

SELECT * FROM ACTOR WHERE FIRST_NAME='SCARLETT';

-- 13 WHICH ACTORS HAVE THE LAST NAME ‘JOHANSSON’
SELECT * FROM ACTOR WHERE LAST_NAME='JOHANSSON';

-- 14 HOW MANY DISTINCT ACTORS LAST NAMES ARE THERE?
SELECT COUNT(*) DISTINCT_LAST FROM (SELECT 1 FROM ACTOR GROUP BY LAST_NAME) AS T;
-- 15 WHICH LAST NAMES ARE NOT REPEATED?
SELECT COUNT(*) UNIQUE_LAST FROM (SELECT COUNT(*) C FROM ACTOR GROUP BY LAST_NAME) AS T WHERE T.C = 1;
-- 16 WHICH LAST NAME ARE USED MORE THAN ONCE?

SELECT LAST_NAME
FROM ACTOR
GROUP BY LAST_NAME
HAVING COUNT(*) > 1;

-- 17 WHICH ACTOR HAS APPEARED IN THE MOST FILMS? 
SELECT COUNT(FILM_ACTOR.ACTOR_ID) AS FILM_CONUNT, ACTOR.FIRST_NAME, ACTOR.LAST_NAME
FROM ACTOR INNER JOIN FILM_ACTOR ON ACTOR.ACTOR_ID = FILM_ACTOR.ACTOR_ID
GROUP BY FILM_ACTOR.ACTOR_ID
ORDER BY COUNT(FILM_ACTOR.ACTOR_ID) DESC
LIMIT 1;

-- 18 WHEN IS ‘ACADEMY DINOSAUR’ DUE? 
SELECT RENTAL_DURATION
FROM FILM
WHERE FILM_ID = 1;

SELECT RENTAL_ID 
FROM RENTAL
ORDER BY RENTAL_ID
DESC LIMIT 1;

SELECT RENTAL_DATE, RENTAL_DATE + INTERVAL
(SELECT RENTAL_DURATION FROM FILM WHERE FILM_ID = 1) 
DAY AS DUE_DATE
FROM RENTAL
WHERE RENTAL_ID = (SELECT RENTAL_ID 
	FROM RENTAL 
	ORDER BY RENTAL_ID 
	DESC LIMIT 1);
	

-- 19 WHAT IS THAT AVERAGE RUNNING TIME OF ALL THE FILMS IN THE SAKILA DB? 
SELECT AVG(LENGTH) FROM FILM;


-- 20 WHAT IS THE AVERAGE RUNNING TIME OF FILMS BY CATEGORY?

SELECT CATEGORY.NAME, AVG(LENGTH)
FROM FILM
JOIN FILM_CATEGORY
USING (FILM_ID)
JOIN CATEGORY
USING (CATEGORY_ID)
GROUP BY CATEGORY.NAME
ORDER BY AVG(LENGTH)
DESC;
